# Copy this file to ".env" (same directory) and fill in values.
# Purpose: Configuration for api-testing/test.sh only. This does NOT impact
# the project's main Open WebUI + Docling runtime configuration.
#
# How to use:
# 1) cp api-testing/.env.example api-testing/.env
# 2) Fill in the values relevant to the connection(s) you want to test
# 3) Run: api-testing/test.sh "Hello" --conn openwebui|bag|aws|openai
#
# Security note: This repo's .gitignore is set to ignore .env files. Keep
# real secrets out of version control. Treat keys/tokens as sensitive.

# Base model used by targets that speak an OpenAI-compatible API (Open WebUI,
# Bedrock Access Gateway). You can override per-connection below if needed.
# Examples:
# - Anthropic via BAG: us.anthropic.claude-3-5-haiku-20241022-v1:0
# - Mistral via BAG:   eu.mistral.mistral-large-latest
# - Meta via BAG:      us.meta.llama3-1-70b-instruct-v1:0
BEDROCK_BASE_MODEL_ID=us.anthropic.claude-3-5-haiku-20241022-v1:0

# Open WebUI Connection Settings (OpenAI-compatible)
#
# OPENWEBUI_API_KEY: Create in Open WebUI under Settings -> API Keys
# OPENWEBUI_BASE_URL: The HTTP endpoint for Open WebUI's OpenAI-compatible API
#   Typically looks like: https://<your-openwebui-host>/api/v1
# Optional override:
#   OPENWEBUI_MODEL: Set to use a different model than BEDROCK_BASE_MODEL_ID
OPENWEBUI_API_KEY=your_api_key_here
OPENWEBUI_BASE_URL=your_openwebui_host.example.com/api/v1
#OPENWEBUI_MODEL=

# Bedrock Access Gateway (BAG) Connection Settings (OpenAI-compatible)
#
# BAG_API_KEY: Provisioned by your BAG deployment (admin/configured secret)
# BAG_BASE_URL: Your BAG's OpenAI-compatible entrypoint; usually ends with /api/v1
# Optional override:
#   BAG_MODEL: Set to use a different model than BEDROCK_BASE_MODEL_ID
BAG_API_KEY=your_api_key_here
BAG_BASE_URL=your_bedrock_access_gateway_host.example.com/api/v1
#BAG_MODEL=

# OpenAI Direct Connection Settings (OpenAI-native)
#
# OPENAI_DIRECT_API_KEY: From https://platform.openai.com/ -> API keys
# OPENAI_DIRECT_BASE_URL: Usually https://api.openai.com/v1
# OPENAI_DIRECT_MODEL: Example values: gpt-4o-mini, gpt-4o, gpt-4.1-mini
OPENAI_DIRECT_API_KEY=your_openai_api_key_here
OPENAI_DIRECT_BASE_URL=https://api.openai.com/v1
OPENAI_DIRECT_MODEL=gpt-4o-mini

# AWS Bedrock Direct Connection Settings
#
# This script supports a bearer-token based call to the Bedrock Converse API.
# In many setups, the recommended approach is SigV4 signing (via AWS SDKs or
# a helper service). If your environment provides a short-lived bearer token
# for Bedrock Runtime, set it here along with the region.
#
# Required:
#   AWS_REGION: Region hosting the Bedrock runtime (e.g., us-east-1)
#   AWS_BEARER_TOKEN_BEDROCK: A bearer token authorized for Bedrock runtime
AWS_REGION="us-east-1"
AWS_BEARER_TOKEN_BEDROCK=your_aws_bearer_token_here


# Optional tuning
# MAX_TOKENS: Upper bound on tokens to generate (default 256)
# TEMPERATURE: Sampling temperature (0.0-2.0 typical; default 0.2)
MAX_TOKENS=5000
#TEMPERATURE=0.2

# Debugging
# DEBUG=0: off
# DEBUG=1: verbose internal logs to stderr
# DEBUG=2: bash tracing (set -x) for deep troubleshooting
DEBUG=0

# Text file attachment
# To attach a file, run test.sh with `--file 1`. The script will look for
# .txt files in a `files` directory near the script. Create one of these:
# - api-testing/files
# - files (at the repository root)
# Then pick a file when prompted.
