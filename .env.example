############################################################
# Open WebUI core application (service: open-webui)
# - Values consumed by docker-compose.yml to start the UI.
# - Copy this file to .env and edit for your environment.
############################################################

# Host port that maps to Open WebUI's container port 8080
PORT=4000

# Docker Compose naming and persistent volume for /app/backend/data
CONTAINER_NAME=open-webui
VOLUME_NAME=open-webui

# Open WebUI container image reference
IMAGE=ghcr.io/open-webui/open-webui
#TAG=0.6.26
TAG=latest

# What mode are we running in? dev or prod
ENV=dev
# Secret used by the backend to sign session cookies
WEBUI_SECRET_KEY=put_your_own_secret_key_here


############################################################
# Backend data stores (PostgreSQL + pgvector)
# - Open WebUI requires a pgvector-enabled PostgreSQL instance.
# - The defaults assume you run the bundled postgres service.
############################################################

POSTGRES_DB=openwebui
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres         # Change in production; used by postgres + app

############################################################
# Upstream model APIs and networking targets
# - Configure how Open WebUI talks to external/back-end services.
############################################################

# Browser origin allowed to call the backend
CORS_ALLOW_ORIGIN=http://localhost:4000

# Model gateway endpoints
#OLLAMA_BASE_URL=http://ollama:11434            # Internal service (default)
OLLAMA_BASE_URL=http://host.docker.internal:11434  # Uncomment to reach host daemon
OPENAI_API_KEY=your_api_key_here
OPENAI_API_BASE_URLS=your_base_url_here
OPENAI_MODEL=your_base_model_here                 # We use "us.anthropic.claude-sonnet-4-20250514-v1:0"

# Document parsing service used by Open WebUI (CONTENT_EXTRACTION_ENGINE=tika)
CONTENT_EXTRACTION_ENGINE=tika
TIKA_SERVER_URL=http://tika:9998.     # Needs to match what you have in docker-compose.yml
CHUNK_SIZE=2500                       # Sets the document chunk size for embeddings.
CHUNK_OVERLAP=100                     # Sets the document chunk overlap for embeddings.
RAG_TOP_K=100                           # Sets the default number of results to consider for the embedding when using RAG.

############################################################
# Application logging and behavior toggles
############################################################

GLOBAL_LOG_LEVEL=INFO
WEBUI_LOG_LEVEL=DEBUG

# Account provisioning + login flows
ENABLE_SIGNUP=true                   # Allow self-service registration
ENABLE_LOGIN_FORM=true                # Keep username/password login enabled
ENABLE_SIGNUP_APPROVAL=false          # Require admin approval after signup
DEFAULT_USER_ROLE=user                # Role assigned to new accounts
SHOW_ADMIN_DETAILS=true              # Hide admin emails on the login screen
JWT_EXPIRES_IN=1h                     # JWT token expiration time

# Database connection URL (overrides SQLLite)
DATABASE_TYPE=postgresql
VECTOR_DB=pgvector
PGVECTOR_DB_URL=postgresql://postgres:postgres@postgres:5432/openwebui
DATABASE_URL=postgresql://postgres:postgres@postgres:5432/openwebui

# OAuth configuration (set Microsoft client/tenant secrets separately)
#ENABLE_OAUTH_SIGNUP=false
#ENABLE_OAUTH_ROLE_MANAGEMENT=true
#ENABLE_OAUTH_GROUP_MANAGEMENT=false
#OAUTH_SCOPES=openid email profile
#OAUTH_ROLES_CLAIM=roles
#OAUTH_ADMIN_ROLES=open-webui/admin
#OAUTH_ALLOWED_ROLES=open-webui/user,open-webui/admin
#OAUTH_MERGE_ACCOUNTS_BY_EMAIL=true
#OAUTH_UPDATE_PICTURE_ON_LOGIN=true

# Retrieval-augmented generation (RAG) & web search settings
ENABLE_WEB_SEARCH=true
WEB_SEARCH_ENGINE=google_pse
WEB_SEARCH_RESULT_COUNT=25
WEB_SEARCH_CONCURRENT_REQUESTS=10
ENABLE_WEB_LOADER_SSL_VERIFICATION=true
WEB_SEARCH_DOMAIN_FILTER_LIST=
GOOGLE_PSE_API_KEY=your_api_key_here
GOOGLE_PSE_ENGINE_ID=your_engine_id_here
WEB_LOADER_CONCURRENT_REQUESTS=35
BYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVAL=false

# Arena Model
ENABLE_EVALUATION_ARENA_MODELS=false

# Controls whether users are shown the share to community button.
ENABLE_COMMUNITY_SHARING=false

############################################################
# Ollama container (service: ollama)
# - Provides local model serving. Host port mapping is optional.
############################################################

OLLAMA_IMAGE=ollama/ollama
OLLAMA_TAG=latest
OLLAMA_CONTAINER_NAME=ollama
OLLAMA_PORT=11434                      # Only used if you expose the port to host


############################################################
# Apache Tika container (service: tika)
# - Handles document content extraction when CONTENT_EXTRACTION_ENGINE=tika.
############################################################

TIKA_IMAGE=apache/tika
TIKA_TAG=latest
TIKA_CONTAINER_NAME=tika
TIKA_PORT=9998


############################################################
# Docling container (service: docling)
# - Optional alternative document loader alongside Tika.
############################################################

DOCLING_IMAGE=ghcr.io/docling-project/docling-serve-cpu
DOCLING_TAG=latest
DOCLING_CONTAINER_NAME=docling
DOCLING_PORT=5001
DOCLING_SERVE_ENABLE_UI=1


############################################################
# Hugging Face cache & authentication (used by Docling)
############################################################

HUGGINGFACE_HUB_TOKEN=your_huggingface_token_here
HF_HOME=/opt/app-root/src/.cache/huggingface
TRANSFORMERS_CACHE=/opt/app-root/src/.cache/huggingface/hub
HUGGINGFACE_HUB_OFFLINE=1              # 1=prefer cached models; set 0 to allow network
